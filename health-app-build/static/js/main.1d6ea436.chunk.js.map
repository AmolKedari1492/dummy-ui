{"version":3,"sources":["serviceWorker.js","services/users.service.js","utils/index.js","pages/login.js","components/Nav.js","pages/admin.js","pages/account.js","services/meals.service.js","pages/home.js","pages/register.js","pages/reset-password.js","pages/Meal.js","index.js"],"names":["Boolean","window","location","hostname","match","getUsers","query","successHandler","errorHandler","axios","baseURL","then","resp","data","err","deleteUser","_id","email","test","String","toLowerCase","str","i","cookies","Cookies","Login","props","onChangeHandler","e","setState","target","name","value","onLoginClickHandler","state","utilService","password","UserService","login","user","set","path","admin","dailyTarget","history","push","userID","error","message","className","this","type","onChange","onClick","to","pathname","label","Component","Nav","isAdmin","get","JSON","parse","activePath","logout","remove","console","Admin","fetchUsers","users","goToMeals","editUser","map","userIndex","key","Account","fetchUserData","getUser","onInputChangeHandler","updateUser","changePassword","resetPassword","cpassword","disabled","checked","UtilService","MonthLable","0","1","2","3","4","5","6","7","8","9","10","11","Home","fetchUserInfo","usersService","paramsID","userDailyTarget","userName","procesData","formattedData","meals","forEach","item","date","Date","created_at","year","getFullYear","month","getMonth","fetchUserMeals","MealService","getMeals","user_id","formattedDate","d","ye","Intl","DateTimeFormat","format","mo","da","day","onEditItem","yearItem","mealIndex","calories","addMeal","onEdit","meal","mealID","onDelete","deleteMeal","clearDateRange","fromDate","undefined","toDate","filterByDateRange","from","handleFromChange","handleToChange","htmlFor","selected","Object","keys","yearItemIndex","monthIndex","Register","onRegisterClickHandler","register","ResetPassword","onResetClickHandler","params","Meal","fetchMeal","getMeal","onClickHandler","onSave","onCreate","createMeal","updateMeal","PrivateRoute","component","rest","render","ReactDOM","StrictMode","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1d6ea436.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\nclass UserService {\r\n    login(query, data, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'POST',\r\n            'url':'/api/login',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n            data\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    logout(query, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'GET',\r\n            'url':'/api/logout',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\"\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    register(query, data, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'POST',\r\n            'url':'/api/users/',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n            data\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    getUser(query, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'GET',\r\n            'url':'/api/users/' + query._id,\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    updateUser(query, data, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'PUT',\r\n            'url':'/api/users/',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n            data\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    resetPassword(query, data, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'PUT',\r\n            'url':'/api/users/change-password',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n            data\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    getUsers = (query, successHandler, errorHandler) => {\r\n        axios({\r\n            'method':'GET',\r\n            'url':'/api/users/',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    deleteUser = (query, successHandler, errorHandler) => {\r\n        axios({\r\n            'method':'DELETE',\r\n            'url':'/api/users/' + query._id,\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n};\r\n\r\nexport default new UserService();\r\n","const validateEmail = (email) => {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n};\r\n\r\nconst composeQuerystring = (query) => {\r\n    let str = '?'\r\n    for(let i in query){\r\n        str += `${i}=${ query[i] }`;\r\n        str +=\"&\"\r\n    }\r\n    return str;\r\n};\r\n\r\nexport default {\r\n    validateEmail,\r\n    composeQuerystring\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./login.css\"\r\n\r\nimport UserService from \"../services/users.service\";\r\nimport Cookies from 'universal-cookie';\r\nimport utilService from \"../utils/index\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            error: ''\r\n        })\r\n    }\r\n\r\n    onLoginClickHandler = () => {\r\n\r\n        if (!this.state.email) {\r\n            this.setState({\r\n                error: 'Please enter Email.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!utilService.validateEmail(this.state.email)) {\r\n            this.setState({\r\n                error: 'Email is not valid.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            this.setState({\r\n                error: 'Please enter Password.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        UserService.login({}, data, (user) => {\r\n            cookies.set('_id', user._id, { path: '/' });\r\n            cookies.set('name', user.name, { path: '/' });\r\n            cookies.set('admin', user.admin, { path: '/' });\r\n            cookies.set('dailyTarget', user.dailyTarget, { path: '/' });\r\n            cookies.set('email', user.email, { path: '/' });\r\n            this.props.history.push('/?userID='+ user._id, { userID: user._id });\r\n        }, (err) => {\r\n            this.setState({\r\n                error: err.message\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"login\">\r\n            <div className=\"login__heading\">\r\n                <h2>Login</h2>\r\n            </div>\r\n            {\r\n                this.state.error\r\n                    ?\r\n                    <div className=\"login__error\">{this.state.error}</div>\r\n                    :\r\n                    null\r\n            }\r\n            <div className=\"login__inputs\">\r\n                <label>Email</label>\r\n                <input type=\"email\" className=\"login__control\" name=\"email\" value={this.state.email} onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"login__control\" name=\"password\" value={this.state.password} onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__actions\">\r\n                <input type=\"button\" className=\"login__actions--direct\"  value=\"Login\" onClick={this.onLoginClickHandler} />\r\n            </div>\r\n            <div className=\"login__links\">\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/register\",\r\n                        label: \"register\"\r\n                    }}\r\n                >Register</Link>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Nav.css\";\r\n\r\nimport Cookies from 'universal-cookie';\r\nimport UserService from \"../services/users.service\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst Nav = (props) => {\r\n\r\n    const logout = () => {\r\n        UserService.logout({}, () => {\r\n            cookies.remove('name', { path: '/' });\r\n            cookies.remove('admin', { path: '/' });\r\n            cookies.remove('email', { path: '/' });\r\n            cookies.remove('_id', { path: '/' });\r\n            cookies.remove('dailyTarget', { path: '/' });\r\n        }, (err) => {\r\n            console.error(err)\r\n        });\r\n    }\r\n\r\n    let isAdmin = cookies.get('admin');\r\n    isAdmin = JSON.parse(isAdmin)\r\n    return (<div className=\"nav-tabs nav\">\r\n        <Link className={`logo ${props.activePath === '/' ? 'active' : ''}`}\r\n            to={{\r\n                pathname: \"/\",\r\n                label: \"home\"\r\n            }}>\r\n            HealthTrackerApp\r\n                </Link>\r\n            <Link className={`${props.activePath === '/account' ? 'active' : ''}`}\r\n                to={{\r\n                    pathname: \"/account\",\r\n                    label: \"account\"\r\n                }}>\r\n                Accout\r\n            </Link>\r\n        {\r\n            isAdmin\r\n                ?\r\n                <Link\r\n                    className={`${props.activePath === '/admin' ? 'active' : ''}`}\r\n                    to={{\r\n                        pathname: \"/admin\",\r\n                        label: \"Admin\"\r\n                    }}\r\n                >Admin</Link>\r\n                :\r\n                null\r\n        }\r\n\r\n        <Link className={`${props.activePath === '/logout' ? 'active' : ''}`}\r\n            to={{\r\n                pathname: \"/login\",\r\n                label: \"logout\"\r\n            }}\r\n            onClick={logout}>\r\n            Logout\r\n                </Link>\r\n    </div>)\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport \"./admin.css\";\r\nimport \"./Home.css\";\r\n\r\nimport UserService from \"../services/users.service\";\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchUsers();\r\n    }\r\n\r\n    fetchUsers = () => {\r\n        UserService.getUsers({}, (users) => {\r\n            this.setState({\r\n                users\r\n            })\r\n        }, error => console.error(error));\r\n    };\r\n\r\n    deleteUser = (user) => {\r\n        UserService.deleteUser(user, (resp) => {\r\n            this.fetchUsers();\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    goToMeals = (user) => {\r\n        this.props.history.push('/', { userID: user._id })\r\n    }\r\n\r\n    editUser = (user) => {\r\n        this.props.history.push('/account', { userID: user._id })\r\n    }\r\n\r\n    render() {\r\n        let activePath = this.props.location.pathname;\r\n        return (<div className=\"home\">\r\n            <header><Nav activePath={activePath} /></header>\r\n            <section>\r\n                <h3>User Management</h3>\r\n                <div className=\"user-list\">\r\n                    <div className=\"user-list-header\">\r\n                        <div className=\"user-list-item\">Name</div>\r\n                        <div className=\"user-list-item\">Email</div>\r\n                        <div className=\"user-list-item\">Actions</div>\r\n                    </div>\r\n                    {\r\n                        this.state.users.map((user, userIndex) => {\r\n                            return (\r\n                                <div className=\"user-list-body\" key={userIndex}>\r\n                                    <div className=\"user-list-item\">{user.name}</div>\r\n                                    <div className=\"user-list-item\">{user.email}</div>\r\n                                    <div className=\"user-list-item\">\r\n                                        <span className=\"btn btn-primary\" onClick={ () => this.goToMeals(user)}>Meals</span>\r\n                                        <span className=\"btn btn-primary\" onClick={ () => this.editUser(user)}>Edit</span>\r\n                                        <span className=\"btn btn-danger\" onClick={ () => this.deleteUser(user) }>Delete</span>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </section>\r\n            <footer></footer>\r\n\r\n        </div>);\r\n    }\r\n};\r\n\r\nexport default Admin;","import React, { Component } from \"react\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport \"./account.css\";\r\nimport Nav from \"../components/Nav\";\r\nimport UserService from \"../services/users.service\";\r\n\r\nconst cookies = new Cookies();\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            name: '',\r\n            password: '',\r\n            cpassword: '',\r\n            dailyTarget: ''\r\n        };\r\n        this.userID = cookies.get('_id');\r\n\r\n        if(this.props.location && this.props.location.state && this.props.location.state.userID) {\r\n            this.userID = this.props.location.state.userID;\r\n        }\r\n\r\n        this.isAdmin = cookies.get('admin');\r\n        this.isAdmin = JSON.parse(this.isAdmin);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchUserData();\r\n    }\r\n\r\n    fetchUserData = () => {\r\n        UserService.getUser({ _id: this.userID }, (resp) => {\r\n            this.setState({\r\n                admin: resp.admin,\r\n                email: resp.email,\r\n                dailyTarget: resp.dailyTarget,\r\n                name: resp.name,\r\n                _id: resp._id\r\n            });\r\n        }, (err) => {\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            admin: !this.state.admin\r\n        })\r\n    }\r\n\r\n    onInputChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    updateUser = () => {\r\n        let { name, email, admin, dailyTarget, _id } = this.state;\r\n        if (!name || !dailyTarget || (dailyTarget && dailyTarget < 1)) {\r\n            this.setState({\r\n                error: 'Please fill proper details'\r\n            });\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            admin,\r\n            email,\r\n            dailyTarget,\r\n            name,\r\n            _id,\r\n        }\r\n        UserService.updateUser({ _id }, data, () => {\r\n            this.props.history.push('/')\r\n        }, (err) => {\r\n            console.error(err)\r\n        });\r\n    }\r\n\r\n    changePassword = () => {\r\n        if (!this.state.password) {\r\n            this.setState({\r\n                error: \"Password cannot be empty.\"\r\n            });\r\n            return;\r\n        }\r\n        let data = {\r\n            _id: this.state._id,\r\n            password: this.state.password\r\n        };\r\n\r\n        UserService.resetPassword({}, data, (user) => {\r\n            this.props.history.push('/')\r\n        }, (err) => {\r\n            this.setState({\r\n                error: err.message\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let activePath = this.props.location.pathname;\r\n        return (<div className=\"home\">\r\n            <header><Nav activePath={activePath} /></header>\r\n            <section>\r\n                <div className=\"account\">\r\n                    <h2>Update</h2>\r\n                    {\r\n                        this.state.error\r\n                            ?\r\n                            <div className=\"account__error\">\r\n                                {\r\n                                    this.state.error\r\n                                }\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className=\"account__item\">\r\n                        <div className=\"account__item--lable\">Email</div>\r\n                        <div className=\"account__item--value\">\r\n                            <input type=\"text\" value={this.state.email} disabled />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.isAdmin\r\n                            ?\r\n                            <div className=\"account__item\">\r\n                                <div className=\"account__item--lable\">Admin</div>\r\n                                <input className=\"\" type=\"checkbox\" checked={this.state.admin || false} onChange={(e) => this.onChangeHandler(e)} />\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                    <div className=\"account__item\">\r\n                        <div className=\"account__item--lable\">Name</div>\r\n                        <div className=\"account__item--value\">\r\n                            <input type=\"text\" name=\"name\" value={this.state.name} onChange={(e) => this.onInputChangeHandler(e)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"account__item\">\r\n                        <div className=\"account__item--lable\">Calories</div>\r\n                        <div className=\"account__item--value\">\r\n                            <input type=\"text\" name=\"dailyTarget\" value={this.state.dailyTarget} onChange={(e) => this.onInputChangeHandler(e)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"account__actions--direct\">\r\n                        <div onClick={this.updateUser}>Save</div>\r\n                    </div>\r\n                    <div className=\"account__item\">\r\n                        <div className=\"account__item--lable\">password</div>\r\n                        <div className=\"account__item--value\">\r\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.onInputChangeHandler} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"account__actions--direct\">\r\n                        <div onClick={this.changePassword}>Change password</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <footer></footer>\r\n        </div>);\r\n    }\r\n};\r\n\r\nexport default Account;\r\n","import axios from \"axios\";\r\nimport UtilService from \"../utils/\";\r\n\r\nclass MealsService {\r\n    getMeals(query, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'GET',\r\n            'url':'/api/meals/all/meals' + UtilService.composeQuerystring(query),\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\"\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    getMeal(query, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'GET',\r\n            'url':'/api/meals/' + query._id,\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\"\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n    \r\n    updateMeal(query, data, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'PUT',\r\n            'url':'/api/meals/',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n            data,\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    createMeal(query, data, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'POST',\r\n            'url':'/api/meals/',\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\",\r\n            data,\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n\r\n    deleteMeal(query, successHandler, errorHandler) {\r\n        axios({\r\n            'method':'DELETE',\r\n            'url':'/api/meals/' + query._id,\r\n            'headers': {\r\n                \"Accept\": \"application/json\",\r\n                'content-type':'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            baseURL: \"http://akedari-dummy-api.herokuapp.com/\"\r\n        }).then(resp => successHandler(resp.data), (err) => errorHandler(err))\r\n    }\r\n};\r\n\r\nexport default new MealsService();","import React, { Component } from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport \"./Home.css\";\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport MealService from \"../services/meals.service\";\r\nimport usersService from \"../services/users.service\";\r\nconst cookies = new Cookies();\r\n\r\nconst MonthLable = {\r\n    0: 'Jan',\r\n    1: 'Feb',\r\n    2: 'Mar',\r\n    3: 'Apr',\r\n    4: 'May',\r\n    5: 'Jun',\r\n    6: 'Jul',\r\n    7: 'Aug',\r\n    8: 'Sep',\r\n    9: 'Oct',\r\n    10: 'Nov',\r\n    11: 'Dec'\r\n}\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let paramsID = cookies.get('_id');\r\n        if (this.props.location && this.props.location.state && this.props.location.state.userID) {\r\n            paramsID = this.props.location.state.userID;\r\n        }\r\n        this.state = {\r\n            paramsID,\r\n            formattedData: {},\r\n            meals: [],\r\n            userDailyTarget: 10,\r\n            userName: ''\r\n        };\r\n    };\r\n\r\n    componentDidMount(resp, formattedData) {\r\n        this.fetchUserInfo();\r\n        this.fetchUserMeals();\r\n    }\r\n\r\n    fetchUserInfo = () => {\r\n        usersService.getUser({_id: this.state.paramsID}, (resp) => {\r\n            this.setState({\r\n                userDailyTarget: resp.dailyTarget,\r\n                userName: resp.name\r\n            });\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    procesData = (resp, formattedData) => {\r\n        resp.meals.forEach(item => {\r\n            let date = new Date(item.created_at);\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth();\r\n            item.month = date.getMonth();\r\n            item.year = date.getFullYear();\r\n            formattedData[year] = formattedData[year] || {};\r\n            formattedData[year][month] = formattedData[year][month] || [];\r\n            formattedData[year][month].push(item);\r\n        });\r\n\r\n        this.setState({\r\n            formattedData,\r\n            meals: resp.meals\r\n        });\r\n    }\r\n\r\n    fetchUserMeals = () => {\r\n        let formattedData = {};\r\n        MealService.getMeals({ user_id: this.state.paramsID }, (resp) => {\r\n            this.procesData(resp, formattedData);\r\n        }, (err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    formattedDate = (date) => {\r\n        const d = new Date('2010-08-05')\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d)\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d)\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d)\r\n        return (`${da}-${mo}-${ye}`)\r\n    }\r\n\r\n    onEditItem = (e, yearItem, month, mealIndex) => {\r\n        try {\r\n            let { formattedData } = this.state;\r\n            formattedData[yearItem][month][mealIndex].calories = e.target.value;\r\n            this.setState({\r\n                formattedData\r\n            });\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    addMeal = () => {\r\n        this.props.history.push('/meal/', { userID: this.state.paramsID })\r\n    }\r\n\r\n    onEdit = (yearItem, month, mealIndex, meal) => {\r\n        this.props.history.push('/meal/', { mealID: meal._id, userID: this.state.paramsID })\r\n    }\r\n\r\n    onDelete = (yearItem, month, mealIndex, meal) => {\r\n        MealService.deleteMeal(meal, (resp) => {\r\n            this.fetchUserMeals();\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    clearDateRange = () => {\r\n        this.setState({\r\n            fromDate: undefined,\r\n            toDate: undefined,\r\n        }, () => {\r\n            this.fetchUserMeals();\r\n        });\r\n    }\r\n\r\n    filterByDateRange = () => {\r\n        let query = {\r\n            user_id: this.state.paramsID\r\n        };\r\n\r\n        if (this.state.toDate && this.state.fromDate) {\r\n            query.from = this.state.fromDate;\r\n            query.to = this.state.toDate;\r\n        }\r\n\r\n        MealService.getMeals(query, (resp) => {\r\n            let formattedData = {};\r\n            this.procesData(resp, formattedData);\r\n\r\n        }, (e) => {\r\n            console.error(e)\r\n        });\r\n    }\r\n\r\n    handleFromChange = (fromDate) => {\r\n        this.setState({\r\n            fromDate\r\n        });\r\n    }\r\n\r\n    handleToChange = (toDate) => {\r\n        this.setState({\r\n            toDate\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let activePath = this.props.location.pathname;\r\n        let { formattedData } = this.state;\r\n        return (<div className=\"user-home\">\r\n            <header><Nav activePath={activePath} /></header>\r\n            <section>\r\n                <h2>{`${ this.state.userName }'s Meals list`}</h2>\r\n                <div className=\"user-home__filter\">\r\n                    <div className=\"filter-item\">\r\n                        <label htmlFor=\"birthday\">From Date:</label>\r\n                        <DatePicker\r\n                            selected={this.state.fromDate}\r\n                            onChange={this.handleFromChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"filter-item\">\r\n                        <label htmlFor=\"birthday\">To Date:</label>\r\n                        <DatePicker\r\n                            selected={this.state.toDate}\r\n                            onChange={this.handleToChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"filter-item--actions\">\r\n                        <button className=\"btn btn-primary\" onClick={this.filterByDateRange}>Search</button>\r\n                        <button className=\"btn btn-primary\" onClick={this.clearDateRange}>clear</button>\r\n                    </div>\r\n                    <div className=\"filter-item--actions\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addMeal}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"user-home__list\">\r\n                    {\r\n                        Object.keys(formattedData).map((yearItem, yearItemIndex) => {\r\n                            return (<div key={yearItemIndex} className=\"meals-list__year\">\r\n                                <h3>{`Year- ${yearItem}`}</h3>\r\n                                {\r\n                                    Object.keys(formattedData[yearItem]).map((month, monthIndex) => {\r\n                                        return <div key={monthIndex} className=\"meals-list__month\">\r\n                                            <h4>{`${MonthLable[month]}`}</h4>\r\n                                            <div className=\"meals-list__header\">\r\n                                                <div className=\"meals-list__values--item\">Meal</div>\r\n                                                <div className=\"meals-list__values--item\">Calories</div>\r\n                                                <div className=\"meals-list__values--item\">Date</div>\r\n                                                <div className=\"meals-list__values--item\">Action</div>\r\n                                            </div>\r\n                                            {\r\n                                                formattedData[yearItem][month].map((meal, mealIndex) => {\r\n                                                    return <div key={mealIndex} className=\"meals-list__values\">\r\n                                                        <div className=\"meals-list__values--item\">{meal.name}</div>\r\n                                                        <div className=\"meals-list__values--item\">\r\n                                                            <span>{meal.calories}</span>\r\n                                                            {\r\n                                                                meal.calories <= this.state.userDailyTarget\r\n                                                                ? \r\n                                                                <span className=\"badge badge-green\">Success</span>\r\n                                                                :\r\n                                                                <span className=\"badge badge-red\">Exceed</span>\r\n                                                            }\r\n                                                        </div>\r\n                                                        <div className=\"meals-list__values--item\">{this.formattedDate(meal.created_at)}</div>\r\n                                                        <div className=\"meals-list__values--item actions\">\r\n                                                            <span className=\"btn btn-primary\"\r\n                                                                onClick={(e) => this.onEdit(yearItem, month, mealIndex, meal)} >Edit</span>\r\n                                                            <span className=\"btn btn-danger\"\r\n                                                                onClick={(e) => this.onDelete(yearItem, month, mealIndex, meal)} >Delete</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>)\r\n                        })\r\n                    }\r\n                </div>\r\n            </section>\r\n            <footer></footer>\r\n        </div>);\r\n    }\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./login.css\";\r\n\r\nimport UserService from \"../services/users.service\";\r\nimport utilService from \"../utils/index\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            name: '',\r\n            password: '',\r\n            cpassword: '',\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            error: ''\r\n        })\r\n    }\r\n\r\n    onRegisterClickHandler = () => {\r\n\r\n        if (!this.state.name) {\r\n            this.setState({\r\n                error: 'Please enter Name.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (typeof this.state.name !== \"string\") {\r\n            this.setState({\r\n                error: 'Name is invalid.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!this.state.email) {\r\n            this.setState({\r\n                error: 'Please enter Email.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!utilService.validateEmail(this.state.email)) {\r\n            this.setState({\r\n                error: 'Email is not valid.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!this.state.password || !this.state.cpassword) {\r\n            this.setState({\r\n                error: 'Please enter Password.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.state.password && this.state.cpassword && this.state.password !== this.state.cpassword) {\r\n            this.setState({\r\n                error: 'Password not matched.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            name: this.state.name,\r\n            dailyTarget: 100\r\n        };\r\n\r\n        UserService.register({}, data, (user) => {\r\n            this.props.history.push('/login')\r\n        }, (err) => {\r\n            this.setState({\r\n                error: err.message\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"login\">\r\n            <div className=\"login__heading\">\r\n                <h2>Register</h2>\r\n            </div>\r\n            {\r\n                this.state.error\r\n                    ?\r\n                    <div className=\"login__error\">{this.state.error}</div>\r\n                    :\r\n                    null\r\n            }\r\n            <div className=\"login__inputs\">\r\n                <label>Name</label>\r\n                <input className=\"login__control\" type=\"text\" name=\"name\" value={ this.state.name } onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Email</label>\r\n                <input className=\"login__control\" type=\"email\" name=\"email\" value={ this.state.email } onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Password</label>\r\n                <input className=\"login__control\" type=\"password\" name=\"password\" value={ this.state.password } onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Confirm password</label>\r\n                <input className=\"login__control\" type=\"password\" name=\"cpassword\" value={ this.state.cpassword } onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <input className=\"login__actions--direct\" type=\"button\" value=\"Register\" onClick={this.onRegisterClickHandler} />\r\n            </div>\r\n            <div className=\"login__links\">\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        label: \"login\"\r\n                    }}\r\n                >Login</Link>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./login.css\"\r\n\r\nimport UserService from \"../services/users.service\";\r\nimport utilService from \"../utils/index\";\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            cpassword: '',\r\n            error: ''\r\n        };\r\n        this._id = this.props.match.params._id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getUser({ _id: this._id }, (resp) => {\r\n            this.setState({\r\n                email: resp.email\r\n            });            \r\n        }, (err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            error: ''\r\n        })\r\n    }\r\n\r\n    onResetClickHandler = () => {\r\n        if (!utilService.validateEmail(this.state.email)) {\r\n            this.setState({\r\n                error: 'Email is not valid.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!this.state.password || !this.state.cpassword) {\r\n            this.setState({\r\n                error: 'Please enter Password.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.state.password && this.state.cpassword && this.state.password !== this.state.cpassword) {\r\n            this.setState({\r\n                error: 'Password not matched.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            _id: this._id,\r\n            password: this.state.password\r\n        };\r\n\r\n        UserService.resetPassword({}, data, (user) => {\r\n            this.props.history.push('/login')\r\n        }, (err) => {\r\n            this.setState({\r\n                error: err.message\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"login\">\r\n            <div className=\"login__heading\">\r\n                <h2>Reset Password</h2>\r\n            </div>\r\n            {\r\n                this.state.error\r\n                    ?\r\n                    <div className=\"login__error\">{this.state.error}</div>\r\n                    :\r\n                    null\r\n            }\r\n            <div className=\"login__inputs\">\r\n                <label>Email</label>\r\n                <input className=\"login__control\" type=\"email\" name=\"email\" value={ this.state.email } disabled/>\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Password</label>\r\n                <input className=\"login__control\" type=\"password\" name=\"password\" onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Confirm password</label>\r\n                <input className=\"login__control\" type=\"password\" name=\"cpassword\" onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__actions\">\r\n                <input className=\"login__actions--direct\" type=\"button\" value=\"Reset\" onClick={this.onResetClickHandler} />\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React, { Component } from \"react\";\r\nimport \"./login.css\"\r\n\r\nimport MealService from \"../services/meals.service\";\r\n\r\nclass Meal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            calories: ''\r\n        };\r\n\r\n        if (this.props.location && this.props.location.state && this.props.location.state.mealID) {\r\n            this.state.mealID = this.props.location.state.mealID;\r\n        }\r\n\r\n        if (this.props.location && this.props.location.state && this.props.location.state.userID) {\r\n            this.state.userID = this.props.location.state.userID;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.mealID) {\r\n            this.fetchMeal();            \r\n        }\r\n    }\r\n\r\n    fetchMeal = () => {\r\n        MealService.getMeal({ _id: this.state.mealID }, (resp) => {\r\n            this.setState({\r\n                name: resp.meal.name,\r\n                calories: resp.meal.calories\r\n            })\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            error: ''\r\n        })\r\n    }\r\n\r\n    onClickHandler = () => {\r\n\r\n        if (!this.state.name) {\r\n            this.setState({\r\n                error: 'Please enter Email.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!this.state.calories) {\r\n            this.setState({\r\n                error: 'Please enter calories.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.state.calories < 0) {\r\n            this.setState({\r\n                error: 'Calories should be non zero.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(this.state.mealID) {\r\n            this.onSave();\r\n        } else {\r\n            this.onCreate();\r\n        }\r\n\r\n    }\r\n\r\n    onCreate = () => {\r\n        let meal = {\r\n            name: this.state.name,\r\n            calories: this.state.calories * 1,\r\n            user_id: this.state.userID\r\n        };\r\n\r\n        MealService.createMeal({}, meal, () => {\r\n            this.props.history.push('/?userID=' + meal._id, { userID: meal.user_id });\r\n        }, (e) => {\r\n            console.error(e)\r\n        });\r\n    }\r\n\r\n    onSave = () => {\r\n        let meal = {\r\n            name: this.state.name,\r\n            calories: this.state.calories * 1,\r\n            user_id: this.state.userID,\r\n            _id: this.state.mealID\r\n        };\r\n\r\n        MealService.updateMeal({}, meal, () => {\r\n            this.props.history.push('/?userID=' + meal._id, { userID: meal.user_id });\r\n        }, (e) => {\r\n            console.error(e)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"login\">\r\n            <div className=\"login__heading\">\r\n                <h2>Meal</h2>\r\n            </div>\r\n            {\r\n                this.state.error\r\n                    ?\r\n                    <div className=\"login__error\">{this.state.error}</div>\r\n                    :\r\n                    null\r\n            }\r\n            <div className=\"login__inputs\">\r\n                <label>Name</label>\r\n                <input type=\"text\" className=\"login__control\" \r\n                    name=\"name\" \r\n                    value={this.state.name} \r\n                    onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__inputs\">\r\n                <label>Calories</label>\r\n                <input type=\"number\" className=\"login__control\" \r\n                    name=\"calories\" \r\n                    value={this.state.calories} \r\n                    onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n            <div className=\"login__actions\">\r\n                <input type=\"button\" className=\"login__actions--direct\" value=\"Save\" onClick={this.onClickHandler} />\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Meal;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Cookies from 'universal-cookie';\n\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Login from './pages/login';\nimport Admin from './pages/admin';\nimport Account from './pages/account';\nimport Home from './pages/home';\nimport Register from './pages/register';\nimport ResetPassword from './pages/reset-password';\nimport Meal from './pages/Meal';\n\n\nconst cookies = new Cookies();\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    cookies.get('_id')\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n        <Route path=\"/reset-password/:_id\" exact component={ResetPassword} />\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute path='/account' exact component={Account} />\n        <PrivateRoute path='/admin' exact component={Admin} />\n        <PrivateRoute path='/meal' exact component={Meal} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}